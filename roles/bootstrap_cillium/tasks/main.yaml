- name: install gateway api from url
  kubernetes.core.k8s:
    state: present
    src: https://github.com/kubernetes-sigs/gateway-api/releases/download/v1.3.0/standard-install.yaml
  when: inventory_hostname == 'k8s-control-1' and ENABLE_GATEWAY_API | bool
  delegate_to: localhost
  become: false

- name: Add cillium chart repo
  kubernetes.core.helm_repository:
    name: cilium
    repo_url: "https://helm.cilium.io/"
    kubeconfig: /etc/kubernetes/new_cluster_admin.conf
  when: inventory_hostname == 'k8s-control-1'
  delegate_to: localhost  
  become: false

- name: Deploy cilium with helm (Gateway API mode)
  kubernetes.core.helm:
    name: cilium
    chart_ref: cilium/cilium
    release_namespace: kube-system
    chart_version: "{{ CILIUM_VERSION }}"
    kubeconfig: /etc/kubernetes/new_cluster_admin.conf
    values:
      replicas: 1
    set_values:
      - value: "kubeProxyReplacement=true"
      - value: "k8sServiceHost={{ lookup('env', 'K8S_CONTROL_1_IP') }}"
      - value: "k8sServicePort=6443"
      - value: "operator.replicas=1"
      - value: "hubble.ui.enabled=true"
      - value: "hubble.ui.replicas=1"
      - value: "hubble.relay.enabled=true"
      - value: "hubble.relay.replicas=1"
      - value: "hubble.tls.auto.enabled=true"
      - value: "hubble.tls.auto.method=cronJob"
      - value: "hubble.tls.auto.certValidityDuration=1095"
      - value: "hubble.tls.auto.schedule=\"0 0 1 */4 *\""
      - value: "l2announcements.enabled=true"
      - value: "encryption.enabled=true"
      - value: "encryption.type=wireguard"
      - value: "gatewayAPI.enabled=true"
      - value: "envoy.enabled=true"
      - value: "envoy.rollOutPods=true"
    update_repo_cache: true
  changed_when: "'has been upgraded' in cilium_installed.stdout or 'You have successfully installed' in cilium_installed.stdout"
  register: cilium_installed
  when: inventory_hostname == 'k8s-control-1' and ENABLE_GATEWAY_API | bool
  delegate_to: localhost
  become: false

- name: Deploy cilium with helm (Ingress Controller mode)
  kubernetes.core.helm:
    name: cilium
    chart_ref: cilium/cilium
    release_namespace: kube-system
    chart_version: "{{ CILIUM_VERSION }}"
    kubeconfig: /etc/kubernetes/new_cluster_admin.conf
    values:
      replicas: 1
    set_values:
      - value: "kubeProxyReplacement=true"
      - value: "k8sServiceHost={{ lookup('env', 'K8S_CONTROL_1_IP') }}"
      - value: "k8sServicePort=6443"
      - value: "operator.replicas=1"
      - value: "hubble.ui.enabled=true"
      - value: "hubble.ui.replicas=1"
      - value: "hubble.relay.enabled=true"
      - value: "hubble.relay.replicas=1"
      - value: "hubble.tls.auto.enabled=true"
      - value: "hubble.tls.auto.method=cronJob"
      - value: "hubble.tls.auto.certValidityDuration=1095"
      - value: "hubble.tls.auto.schedule=\"0 0 1 */4 *\""
      - value: "l2announcements.enabled=true"
      - value: "encryption.enabled=true"
      - value: "encryption.type=wireguard"
      - value: "ingressController.enabled=true"
      - value: "ingressController.loadbalancerMode=shared"
      - value: "ingressController.default=true"
    update_repo_cache: true
  changed_when: "'has been upgraded' in cilium_installed.stdout or 'You have successfully installed' in cilium_installed.stdout"
  register: cilium_installed
  when: inventory_hostname == 'k8s-control-1' and not (ENABLE_GATEWAY_API | bool)
  delegate_to: localhost
  become: false

- name: restart cilium unmanaged pods
  ansible.builtin.shell: |
    kubectl get pods --all-namespaces -o custom-columns=NAMESPACE:.metadata.namespace,NAME:.metadata.name,HOSTNETWORK:.spec.hostNetwork --no-headers=true | grep '<none>' | awk '{print "-n "$1" "$2}' | xargs -L 1 -r kubectl delete pod
  when: cilium_installed.changed and inventory_hostname == 'k8s-control-1'
  delegate_to: localhost
  become: false

- name: create CiliumLoadBalancerIPPool
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: "cilium.io/v2"
      kind: CiliumLoadBalancerIPPool
      metadata:
        name: "cilium-loadbalancer-ippool"
      spec:
        blocks:
        - cidr: "{{ CILIUM_LOADBALANCER_IPPOOL }}"
  when: inventory_hostname == 'k8s-control-1'
  delegate_to: localhost
  become: false

- name: create L2announcement policy
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: "cilium.io/v2alpha1"
      kind: CiliumL2AnnouncementPolicy
      metadata:
        name: "cilium-{{ inventory_hostname }}-l2announcement-policy"
      spec:
        interfaces:
        - "{{ ansible_facts.default_ipv4.interface }}"
        externalIPs: true
        loadBalancerIPs: true
  when: inventory_hostname in groups['k8s-nodes']
  delegate_to: localhost
  become: false

# https://docs.cilium.io/en/latest/network/kubernetes/configuration/#crio
- name: restart crio service
  ansible.builtin.systemd:
    name: crio.service
    state: restarted
    enabled: true
  when: cilium_installed.changed 
  become: true